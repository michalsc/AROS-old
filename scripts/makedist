#!/bin/sh
# Create a source archive plus binaries.
#
# Install:
# > mkdir .../dist
# > cvs -d ... checkout AROS
# > mv AROS AROS.source
# > ln -s AROS.source/scripts/makedist .
#
# Usage:
# - Update AROS.source if necessary:
#   > cd .../dist/AROS.source ; cvs -z3 upd -dP
# > cd .../dist
# > ./makedist
# - Copy the files to some public place
#

rel=${rel-`date '+%Y%m%d'`}

if [ ! -f AROS-source-$rel.tgz ]; then
    # Create source dist
    rm -rf AROS
    cp -a AROS.source AROS
    find AROS -name CVS -prune -print0 | xargs -0 rm -r
    tar czf AROS-source-$rel.tgz AROS
fi

if [ ! -f AROS-lx86-bin-$rel.tgz ]; then
    # Build Linux/i386
    rm -rf AROS
    cp -a AROS.source AROS
    (
	cd AROS && \
	autoconf && \
	./configure --enable-gfxhidd && \
	make
    ) > AROS-lx86-bin-$rel.log 2>&1
    if [ $? -ne 0 ]; then
	( 
	    echo "Building Linux/i386 failed:"
	    echo "..."
	    tail -50 AROS-lx86-bin-$rel.log
	) 1>&2
    else
	tar czf AROS-lx86-bin-$rel.tgz AROS/bin/linux-i386/AROS
    fi
fi

if [ ! -f AROS-ibmpc-bin-$rel.tgz ]; then
    # Build Native/i386
    rm -rf AROS
    cp -a AROS.source AROS
    (
	#sed 's/ = yes/ = no/' make.defaults > make.opts 

	cd AROS && \
	autoconf && \
	./configure --enable-gfxhidd --target=native-i386 && \
	make || make
    ) > AROS-ibmpc-bin-$rel.log 2>&1
    if [ $? -ne 0 ]; then
	( 
	    echo "Building Native/i386 failed:"
	    echo "..."
	    tail -50 AROS-ibmpc-bin-$rel.log
	) 1>&2
    else
	rm -rf AROS/bin/native-i386/AROS
	mkdir -p AROS/bin/native-i386/AROS
	cp AROS/bin/native-i386/gen/rom/boot/aros.bin AROS/bin/native-i386/AROS/Image
	cp README.native-i386 AROS/bin/native-i386/AROS/
		tar czf AROS-ibmpc-bin-$rel.tgz AROS/bin/native-i386/AROS
    fi
fi
