#
#	Copyright (C) 1995-1998 AROS
#	$Id$
#
#	Desc: Makefile rule file for AROS
#
include $(TOP)/config/host.cfg

VERSION := 1.12

# Don't use := here, because the local makefile can override those!
OS_INCLUDES   = -I$(BINDIR)/include
INCLUDES	= $(USER_INCLUDES) $(OS_INCLUDES)
CFLAGS		= $(USER_DEFINES) $(COMMON_CFLAGS) $(SPECIAL_CFLAGS) $(INCLUDES)
APPCFLAGS	= $(USER_DEFINES) $(APP_CFLAGS) $(SPECIAL_CFLAGS) $(INCLUDES)
AFLAGS		= $(COMMON_AFLAGS) $(SPECIAL_AFLAGS)

TARGET		:= all

# BINDIR is NOT the place where the executables are stored but where the
# resulting binary files for a certain architecture are places. Exes are
# in EXEDIR

# Compute depending paths
BINDIR	  := $(ARCHDIR)/AROS
EXEDIR	  := $(BINDIR)/C
SDIR	  := $(BINDIR)/S
LIBDIR	  := $(BINDIR)/lib
DEVSDIR   := $(BINDIR)/Devs
HIDDSDIR  := $(BINDIR)/Hidds
GADGETDIR := $(BINDIR)/Classes/Gadgets
SLIBDIR   := $(BINDIR)/Libs
TESTDIR   := $(BINDIR)/test
OSMODDIR  := $(BINDIR)/os
INCDIR	  := $(BINDIR)/include
SCRIPTDIR := $(BINDIR)/scripts

# Generated files which are not distributed
GENDIR	  := $(ARCHDIR)/gen
OSGENDIR  := $(GENDIR)/rom
GENINCDIR := $(GENDIR)/include

# Build tools
CC = $(SYS_CC)
AS = $(SYS_AS)
AR = ar r
PURIFY   := $(TOP)/compiler/purify/purify

# Comment this line out to purify the source
#CC = $(PURIFY) $(SYS_CC)
#AS = $(PURIFY) $(SYS_AS)


.SUFFIXES :
.SUFFIXES : .c .h .d .s

.PHONY : all clean setup subdirs

# Don't try to regenerate host.cfg if we want to clean
ifneq (clean,$(patsubst clean%,clean,$(TARGET)))
# Generate $(TOP)/config/host.cfg if it doesn't exist yet.
# GNU make will reread the makefile afterwards
# Sigh, but it won't take any arguments that you may have given it...

$(TOP)/config/host.cfg : $(TOP)/config/host.cfg.in $(TOP)/configure
	@$(IF) $(TEST) ! -d $(GENDIR) ; then $(MKDIR) $(GENDIR) ; else $(NOP) ; fi
	cd $(TOP) ; \
	$(IF) $(TEST) -x ./config.status ; then \
	    ./config.status --recheck ; \
	else
	    ./configure ; \
	fi
endif

-include $(TOP)/make.defaults
-include $(TOP)/make.opts

# Enable debugging?
ifeq ($(DEBUG),yes)
COMMON_CFLAGS += $(DEBUG_CFLAGS)
APP_CFLAGS += $(DEBUG_CFLAGS) -O0
ILDFLAGS += -g
endif
