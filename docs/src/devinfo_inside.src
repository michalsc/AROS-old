\chapter{Developing inside AROS}

\section{Setting up}

\subsection{On Linux}

\begin{itemize}
\item Download the sources as
\link{tar.gz-}{ftp://ftp.aros.org/pub/aros/AROS-source.tgz}
(\fileinfo{$(TOP)/../dist/AROS-source.tgz}).

\item Unpack the source with

\begin{example}
tar xvvzf AROSdev.tgz
\end{example}

This will create a directory named \filename{AROS/} and will populate it
with all sources.

\item Make sure the following packages which are listed \lref{here}
{missing} are installed.

\item Type "make". Doing this the first time will produce lots of errors
and warnings which will *not* abort make. Most of them will read

\begin{example}
"makefile:86: ../../bin/linux-i386/gen/os/dosgetstring.d: No such file or directory"
\end{example}

but Make knows how to create these. When you run make the second time, these
will not show up anymore.

After some time, make will finish and you will have a directory
\filename{AROS/bin/linux-i386/AROS/} which contains all binaries for
linux.

\item CD into \filename{AROS/bin/linux-i386/AROS/} and call
\shell{arosshell}. This will produce some debug output and a
prompt \shell{Workbench:> }. Now type \shell{dir all}. If you
get a list of all generated files, congratiulations, your copy
is working.

\end{itemize}

\section{Compiling}

\include{core.src}
