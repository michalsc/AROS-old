# $Id$
include $(TOP)/config/make.cfg

DEST	  := $(HOME)/www/www.aros.org/www/
SIZEDIR   := $(HOME)/www/www.aros.org/tmp/
JOBDEST   := $(ARCHDIR)jobserver/
MIC	  := $(TOP)/scripts/moveifchanged
LITE	  := /usr/local/Hughes/bin/lite
GNUPLOT   := gnuplot
CONVERT   := /usr/bin/X11/convert
DOCGENDIR := $(GENDIR)/docs
PYTHON    := python

FILES := main.src background.src faq.src differences.src cvs.src missing.src \
    included.src style.src devinfo_inside.src devinfo_outside.src \
    links.src

AUTODOC_SRCS := $(wildcard $(TOP)/rom/*/*.arch \
	$(TOP)/compiler/*/*.arch \
	$(TOP)/workbench/libs/*/*.arch)

SRC2HTML := $(DOCGENDIR)/src2html
RUN_SRC2HTML := $(SRC2HTML) --html --output=index.html \
		--keywords=keywords.db \
	    	--files=files.db main.src

#MM docs : setup-docs
docs : setup $(SRC2HTML) autodocs $(DEST)srcs $(DEST)index.html \
	copy-files copy-pics \
	access-rights

#MM all-docs : setup-docs
all-docs : includes docs

#MM
setup-docs :
	@for dir in $(DEST) $(DEST)autodocs $(DEST)pics $(DEST)other \
		$(DOCGENDIR) ; do \
	    if [ ! -d $$dir ]; then \
		mkdir $$dir ; \
	    else true ; fi ; \
	done
	cd src2html ; make

copy-files : $(DEST)rtdemo.log $(DEST)pubkey.asc $(DEST)license.html \
	$(DEST)oldnews.html

$(DEST)% : %
	cp $< $@

# convert pics/% to DEST/pics/% without CVS dir.
PICS := $(addprefix $(DEST)/pics/, \
	$(filter-out CVS, $(notdir $(wildcard pics/*))))
OTHER := $(addprefix $(DEST)/other/, \
	$(filter-out CVS, $(notdir $(wildcard ../other/*))))

copy-pics : $(PICS) $(OTHER)

$(DEST)license.html : $(TOP)/license.html
	cp $< $@

$(DEST)/pics/% : pics/%
	cp $< $@
	
$(DEST)/other/% : ../other/%
	cp $< $@
	
access-rights :
	cd $(DEST) ; \
	    chmod -R u=rwX,og=rX .

##MM docs-index : setup-docs docs
#docs-index :
#	cd $(DEST) ; glimpseindex -H . -o .

$(DEST)srcs :
	ln -s $(TOP) $(DEST)srcs

#MM
clean ::
	-rm -f $(HTML)
	-rm -rf $(DOCGENDIR)
	cd src2html ; make clean

$(SRC2HTML) : src2html/src2html
	cp $< $@

$(DEST)index.html : $(FILES) doc_header.html doc_footer.html \
	    	$(SRC2HTML) keywords.db files.db \
		page_header.html $(DOCGENDIR)/run-src2html
	cp *.src *.html *.db $(DOCGENDIR)
	cd $(DOCGENDIR) ; \
	export TOP="$(TOP)" ; \
	$(RUN_SRC2HTML) && \
	$(RUN_SRC2HTML) && \
	$(RUN_SRC2HTML) && \
	mv index.html index-*.html $(DEST)

# This is a trick: If any other rule touches this, src2html is run.
$(DOCGENDIR)/run-src2html :
	@touch $@

autodocs : $(DOCGENDIR)/htmlpages

$(DOCGENDIR)/htmlpages : $(AUTODOC_SRCS) genadocs.py \
		adoc_header.html adoc_footer.html page_header.html
	@echo "Regenerating the HTML AutoDocs"
	@$(PYTHON) genadocs.py DESTDIR="$(DEST)/autodocs" \
		DOCGENDIR="$(DOCGENDIR)" \
		$(AUTODOC_SRCS)
	@touch $(DOCGENDIR)/htmlpages $(DOCGENDIR)/run-src2html

includes : $(DOCGENDIR)/devlist.inc \
	$(DOCGENDIR)/contents.inc \
	$(DOCGENDIR)/status.inc \
	$(DEST)progress.png \
	$(DEST)contrib.png

$(DEST)progress.png : size2plot.in $(SIZEDIR)/aros.size
	sed -e "s;@DOCGENDIR@;$(DOCGENDIR);" \
	    -e "s;@SIZEFILE@;$(SIZEDIR)/aros.size;" \
	    size2plot.in > $(DOCGENDIR)/size2plot.gp
	$(GNUPLOT) $(DOCGENDIR)/size2plot.gp
	$(CONVERT) $(DOCGENDIR)/plot.pbm $@
	$(CONVERT) $(DOCGENDIR)/plot.pbm $(basename $@).jpg

$(DEST)contrib.png : size2plot.in $(SIZEDIR)/contrib.size
	sed -e "s;@DOCGENDIR@;$(DOCGENDIR);" \
	    -e "s;@SIZEFILE@;$(SIZEDIR)/contrib.size;" \
	    size2plot.in > $(DOCGENDIR)/size2plot.gp
	$(GNUPLOT) $(DOCGENDIR)/size2plot.gp
	$(CONVERT) $(DOCGENDIR)/plot.pbm $@
	$(CONVERT) $(DOCGENDIR)/plot.pbm $(basename $@).jpg

$(DOCGENDIR)/devlist.inc : devitemfilt.gawk $(TOP)/../CVSROOT/passwd.txt
	gawk -f $< --assign TOP="$(TOP)" > $@
	@touch $(DOCGENDIR)/run-src2html

$(DOCGENDIR)/status.inc : stat2html.gawk
	@echo "Rebuilding status table..."
	gawk -f stat2html.gawk > $@.new
	$(MIC) $@.new $@
	if $(TEST) -e $@.new; then $(RM) $@.new ; else touch $(DOCGENDIR)/run-src2html ; fi

$(DOCGENDIR)/contents.inc : contents2html.gawk \
		makefile2html.gawk
	gawk -f contents2html.gawk --assign TOP="$(TOP)" $(TOP)/contents > $@
	@touch $(DOCGENDIR)/run-src2html

# vim:syn=make:
